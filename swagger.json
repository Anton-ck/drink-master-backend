{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "DrinkMaster backend documentation",
    "description": "DrinkMaster is application for finding and creating cocktail pecipes"
  },

  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://drink-master-backend.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    {
      "name": "Own Recipes",
      "description": "Endpoints for user`s own recipes"
    },
    {
      "name": "Favorite Recipes",
      "description": "Endpoints for user`s favorite recipes"
    },
    {
      "name": "Glasses",
      "description": "Endpoints for glasses which user can use in recipes"
    },
    {
      "name": "Subscription",
      "description": "Endpoints for user`s subscription"
    },
    {
      "name": "All Recipes",
      "description": "Endpoints for all recipes"
    },
    {
      "name": "Popular Recipes",
      "description": "Endpoints for popular recipes"
    },
    {
      "name": "Ingredients",
      "description": "Endpoints for ingredients which user can use in recipes"
    },
    {
      "name": "Search",
      "description": "Endpoints for search recipes"
    }
  ],

  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],

        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              },
              "examples": {
                "signupBodyExample": {
                  "value": {
                    "name": "Example",
                    "email": "example@example.com",
                    "password": "Examplepassword1"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Created (signup successful response)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                },
                "examples": {
                  "signupSuccessfulResponseExample": {
                    "value": {
                      "token": "tokenexample",
                      "user": {
                        "name": "Example",
                        "email": "example@example.com"
                      }
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SignUpvalidationErrorExample": {
                    "value": {
                      "message": "email Exampletest.com is invalid!"
                    }
                  }
                }
              }
            }
          },

          "409": {
            "description": "Conflict (Provided email already exists)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SignUpErrorExample": {
                    "value": {
                      "message": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "signinBodyExample": {
                  "value": {
                    "email": "example@example.com",
                    "password": "Examplepassword1"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "OK (signin successful response)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "examples": {
                  "signinSuccessfulResponseExample": {
                    "value": {
                      "token": "tokenexample",
                      "user": {
                        "name": "Example",
                        "email": "example@example.com",
                        "avatarURL": "https://res.cloudinary.com/Example"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SignInvalidationErrorExample": {
                    "value": {
                      "message": "email Exampletest.com is invalid!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (email or password is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Email is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No Content (logout successful response)"
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user`s info",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (user was successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                },
                "examples": {
                  "GetCurrentResponseExample": {
                    "value": {
                      "name": "Example",
                      "email": "example@example.com",
                      "avatarURL": "https://res.cloudinary.com/Example"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Changing user`s info",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Changing user`s info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangingInfoRequest"
              },
              "examples": {
                "ChangingInfoBodyExample": {
                  "value": {
                    "name": "Example"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "OK (successful changing info response)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangingInfoResponse"
                },
                "examples": {
                  "ChangingInfoSuccessfulResponseExample": {
                    "value": {
                      "name": "Example"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "ChangingInfovalidationErrorExample": {
                    "value": {
                      "message": "\"name\" is not allowed to be empty"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no such user in the data base)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Changing user`s avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Changing user`s avatar object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChangingaAvatarRequest"
              },
              "encoding": {
                "avatarURL": {
                  "contentType": "image/png, image/jpeg, image/jpg",
                  "style": "form"
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "OK (successful changing avatar response)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangingAvatarResponse"
                },
                "examples": {
                  "ChangingAvatarSuccessfulResponseExample": {
                    "value": {
                      "avatarURL": "https://res.cloudinary.com/Example"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "ChangingAvatarValidationErrorExample": {
                    "value": {
                      "message": "Wrong extension type! Extensions should be *.png, *.jpg, *.jpeg"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no file to upload)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "File not found for upload"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/own": {
      "get": {
        "tags": ["Own Recipes"],
        "summary": "Get current user`s saved recipes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 8
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Recipes were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOwnRecipesResponse"
                },
                "examples": {
                  "GetOwnRecipesResponseExample": {
                    "value": {
                      "totalHits": 7,
                      "cocktails": [
                        {
                          "_id": "639b6de9ff77d221f190c51e",
                          "drink": "Affair",
                          "category": "Ordinary Drink",
                          "alcoholic": "Alcoholic",
                          "glass": "Highball glass",
                          "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                          "drinkThumb": "http://res.cloudinary.com",
                          "ingredients": [
                            {
                              "title": "Strawberry schnapps",
                              "measure": "2 oz ",
                              "ingredientThumb": "http://res.cloudinary.com",
                              "thumb-medium": "http://res.cloudinary.com",
                              "thumb-small": "http://res.cloudinary.com"
                            }
                          ],
                          "usersFavorite": [
                            "64e7adf3e24c73d3276e88ff",
                            "64e66c7c37cd1ffa91e1d8d2"
                          ],
                          "updatedAt": "2023-08-31T13:29:01.194Z",
                          "description": "The spring punch is a highball cocktail of vodka and liqueur."
                        }
                      ]
                    }
                  },
                  "NoOwnCocktailsResponseExample": {
                    "value": {
                      "message": "No cocktails have been added yet",
                      "cocktails": []
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      },

      "post": {
        "tags": ["Own Recipes"],
        "summary": "Creating a new cocktail recipe",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Cocktail Creating object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatingCocktailRequest"
              },
              "examples": {
                "CocktailCreatingBodyExample": {
                  "value": {
                    "_id": "example_cocktail_id",
                    "drink": "name of cocktail",
                    "category": "Category of cocktail",
                    "alcoholic": "Alcoholic",
                    "glass": "Cocktail glass",
                    "instructions": "Instruction example",
                    "drinkThumb": "https://res.cloudinary.com/",
                    "ingredients": ["ingredient1", "ingredient2"],
                    "usersFavorite": ["Name1", "Name2"],
                    "owner": {
                      "_id": "example_user`s_id",
                      "email": "example@example.com"
                    },
                    "createdAt": "2023-08-27T19:33:05.467Z"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Created (Cocktail has been successfully created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CocktailRecipe"
                },
                "examples": {
                  "CreatingSuccessfulResponseExample": {
                    "value": {
                      "_id": "example_cocktail_id",
                      "drink": "name of cocktail",
                      "category": "Category of cocktail",
                      "alcoholic": "Alcoholic",
                      "glass": "Cocktail glass",
                      "instructions": "Instruction example",
                      "drinkThumb": "https://res.cloudinary.com/",
                      "ingredients": ["ingredient1", "ingredient2"],
                      "usersFavorite": ["Name1", "Name2"],
                      "owner": {
                        "_id": "example_user`s_id",
                        "email": "example@example.com"
                      },
                      "createdAt": "2023-08-27T19:33:05.467Z"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "CreatingCocktailErrorExample": {
                    "value": {
                      "message": "\"examplefield\" is not allowed to be empty"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/own/{id}": {
      "delete": {
        "tags": ["Own Recipes"],
        "summary": "Delete one user`s recipes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recipe Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Recipe was successfully deleted)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOwnRecipesResponse"
                },
                "examples": {
                  "DeleteOwnRecipesResponseExample": {
                    "value": {
                      "message": "Cocktail deleted"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "403": {
            "description": "Forbidden (user doesn`t have access to delete recepies)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "You can`t delete other users recipe"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no such a cocktail in the data-base)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "The requested cocktail was not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/favorite": {
      "get": {
        "tags": ["Favorite Recipes"],
        "summary": "Get current user`s favorite recipes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 8
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Recipes were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOwnRecipesResponse"
                },
                "examples": {
                  "GetFavoriteRecipesResponseExample": {
                    "value": {
                      "totalHits": 7,
                      "drinks": [
                        {
                          "_id": "639b6de9ff77d221f190c51e",
                          "drink": "Affair",
                          "category": "Ordinary Drink",
                          "alcoholic": "Alcoholic",
                          "glass": "Highball glass",
                          "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                          "drinkThumb": "http://res.cloudinary.com",
                          "ingredients": [
                            {
                              "title": "Strawberry schnapps",
                              "measure": "2 oz ",
                              "ingredientThumb": "http://res.cloudinary.com",
                              "thumb-medium": "http://res.cloudinary.com",
                              "thumb-small": "http://res.cloudinary.com"
                            }
                          ],
                          "usersFavorite": [
                            "64e7adf3e24c73d3276e88ff",
                            "64e66c7c37cd1ffa91e1d8d2"
                          ],
                          "updatedAt": "2023-08-31T13:29:01.194Z",
                          "description": "The spring punch is a highball cocktail of vodka and liqueur."
                        }
                      ]
                    }
                  },
                  "NoFavoriteCocktailsResponseExample": {
                    "value": {
                      "message": "No favorite cocktails have been added yet"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/favorite/{recipId}": {
      "patch": {
        "tags": ["Favorite Recipes"],
        "summary": "Add one recipe to user`s favorite",
        "parameters": [
          {
            "name": "recipId",
            "in": "path",
            "description": "Recipe Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Recipe was successfully added to favorite)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToFavoriteRecipesResponse"
                },
                "examples": {
                  "AddToFavoriteRecipesResponseExample": {
                    "value": {
                      "totalHits": 7,
                      "cocktails": [
                        {
                          "_id": "639b6de9ff77d221f190c51e",
                          "drink": "Affair",
                          "category": "Ordinary Drink",
                          "alcoholic": "Alcoholic",
                          "glass": "Highball glass",
                          "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                          "drinkThumb": "http://res.cloudinary.com",
                          "ingredients": [
                            {
                              "title": "Strawberry schnapps",
                              "measure": "2 oz ",
                              "ingredientThumb": "http://res.cloudinary.com",
                              "thumb-medium": "http://res.cloudinary.com",
                              "thumb-small": "http://res.cloudinary.com"
                            }
                          ],
                          "usersFavorite": [
                            "64e7adf3e24c73d3276e88ff",
                            "64e66c7c37cd1ffa91e1d8d2"
                          ],
                          "updatedAt": "2023-08-31T13:29:01.194Z",
                          "description": "The spring punch is a highball cocktail of vodka and liqueur."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "409": {
            "description": "Conflict (Cocktail has been added to favorites earlier)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AddToFavoriteErrorExample": {
                    "value": {
                      "message": "Favorite cocktail added early"
                    }
                  }
                }
              }
            }
          }
        }
      },

      "delete": {
        "tags": ["Favorite Recipes"],
        "summary": "Delete one user`s recipes",
        "parameters": [
          {
            "name": "recipId",
            "in": "path",
            "description": "Recipe Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Recipe was successfully deleted)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOwnRecipesResponse"
                },
                "examples": {
                  "DeleteFromFavoritesRecipesResponseExample": {
                    "value": {
                      "totalHits": 7,
                      "cocktails": [
                        {
                          "_id": "639b6de9ff77d221f190c51e",
                          "drink": "Affair",
                          "category": "Ordinary Drink",
                          "alcoholic": "Alcoholic",
                          "glass": "Highball glass",
                          "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                          "drinkThumb": "http://res.cloudinary.com",
                          "ingredients": [
                            {
                              "title": "Strawberry schnapps",
                              "measure": "2 oz ",
                              "ingredientThumb": "http://res.cloudinary.com",
                              "thumb-medium": "http://res.cloudinary.com",
                              "thumb-small": "http://res.cloudinary.com"
                            }
                          ],
                          "usersFavorite": [
                            "64e7adf3e24c73d3276e88ff",
                            "64e66c7c37cd1ffa91e1d8d2"
                          ],
                          "updatedAt": "2023-08-31T13:29:01.194Z",
                          "description": "The spring punch is a highball cocktail of vodka and liqueur."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "409": {
            "description": "Conflict (Cocktail has been deleted from favorites earlier)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "DeleteFromFavoritesErrorExample": {
                    "value": {
                      "message": "Favorite cocktail deleted early"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/glasses": {
      "get": {
        "tags": ["Glasses"],
        "summary": "Get collection of glasses",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (glasses were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGlassesResponse"
                },
                "examples": {
                  "GetGlassesResponseExample": {
                    "value": [
                      "Highball glass",
                      "Cocktail glass",
                      "Old-fashioned glass"
                    ]
                  }
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error (array of glasses is empty)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "GetGlassesErrorExample": {
                    "value": {
                      "message": "No glasses list"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/subscribe": {
      "post": {
        "tags": ["Subscription"],
        "summary": "User subscription",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Subscription object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              },
              "examples": {
                "subscriptionBodyExample": {
                  "value": {
                    "email": "example@example.com"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "OK (Successful Subscription)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                },
                "examples": {
                  "subscriptionSuccessfulResponseExample": {
                    "value": {
                      "message": "subscription email sent"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SubscriptionErrorExample": {
                    "value": {
                      "message": "Missing fields"
                    }
                  }
                }
              }
            }
          },

          "409": {
            "description": "Conflict (Provided email already in use for subscription)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SubscriptionErrorExample": {
                    "value": {
                      "message": "This email is already in use in subscription"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/recipes/category-list": {
      "get": {
        "tags": ["All Recipes"],
        "summary": "Get collection of category",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Categories were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriesResponse"
                },
                "examples": {
                  "GetCategoriesResponseExample": {
                    "value": ["Cocktail", "Ordinary Drink", "Punch/Party Drink"]
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not found (array of categories is empty)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "GetCategoriesErrorExample": {
                    "value": {
                      "message": "Categories not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/recipes/main-page": {
      "get": {
        "tags": ["All Recipes"],
        "summary": "Get collection of cocktails",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 3
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Cocktails were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCocktailsResponse"
                },
                "examples": {
                  "GetCocktailsResponseExample": {
                    "value": [
                      {
                        "_id": "639b6de9ff77d221f190c51e",
                        "drink": "Affair",
                        "category": "Ordinary Drink",
                        "alcoholic": "Alcoholic",
                        "glass": "Highball glass",
                        "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                        "drinkThumb": "http://res.cloudinary.com",
                        "ingredients": [
                          {
                            "title": "Strawberry schnapps",
                            "measure": "2 oz ",
                            "ingredientThumb": "http://res.cloudinary.com",
                            "thumb-medium": "http://res.cloudinary.com",
                            "thumb-small": "http://res.cloudinary.com"
                          }
                        ],
                        "usersFavorite": [
                          "64e7adf3e24c73d3276e88ff",
                          "64e66c7c37cd1ffa91e1d8d2"
                        ],
                        "updatedAt": "2023-08-31T13:29:01.194Z",
                        "description": "The spring punch is a highball cocktail of vodka and liqueur."
                      }
                    ]
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not found (array of cocktails is empty)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "GetCocktailsErrorExample": {
                    "value": {
                      "message": "Sorry, no drinks were found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/recipes/{id}": {
      "get": {
        "tags": ["All Recipes"],
        "summary": "Get cocktail by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recipe Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 8
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Cocktail was successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CocktailRecipe"
                },
                "examples": {
                  "GetCocktailByIdResponseExample": {
                    "value": {
                      "_id": "639b6de9ff77d221f190c51e",
                      "drink": "Affair",
                      "category": "Ordinary Drink",
                      "alcoholic": "Alcoholic",
                      "glass": "Highball glass",
                      "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                      "drinkThumb": "http://res.cloudinary.com",
                      "ingredients": [
                        {
                          "title": "Strawberry schnapps",
                          "measure": "2 oz ",
                          "ingredientThumb": "http://res.cloudinary.com",
                          "thumb-medium": "http://res.cloudinary.com",
                          "thumb-small": "http://res.cloudinary.com"
                        }
                      ],
                      "usersFavorite": [
                        "64e7adf3e24c73d3276e88ff",
                        "64e66c7c37cd1ffa91e1d8d2"
                      ],
                      "updatedAt": "2023-08-31T13:29:01.194Z",
                      "description": "The spring punch is a highball cocktail of vodka and liqueur."
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no such a cocktail in the data-base)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "Cocktail with id 639b6de9ff77d221f190c51e not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/recipes/{category}": {
      "get": {
        "tags": ["All Recipes"],
        "summary": "Get cocktail by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Recipe category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 8
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Cocktail was successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCocktailsResponse"
                },
                "examples": {
                  "GetCocktailsByCategoryResponseExample": {
                    "value": [
                      {
                        "_id": "639b6de9ff77d221f190c51e",
                        "drink": "Affair",
                        "category": "Ordinary Drink",
                        "alcoholic": "Alcoholic",
                        "glass": "Highball glass",
                        "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                        "drinkThumb": "http://res.cloudinary.com",
                        "ingredients": [
                          {
                            "title": "Strawberry schnapps",
                            "measure": "2 oz ",
                            "ingredientThumb": "http://res.cloudinary.com",
                            "thumb-medium": "http://res.cloudinary.com",
                            "thumb-small": "http://res.cloudinary.com"
                          }
                        ],
                        "usersFavorite": [
                          "64e7adf3e24c73d3276e88ff",
                          "64e66c7c37cd1ffa91e1d8d2"
                        ],
                        "updatedAt": "2023-08-31T13:29:01.194Z",
                        "description": "The spring punch is a highball cocktail of vodka and liqueur."
                      }
                    ]
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no such a cocktail in the data-base)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "Cocktail in category Ordinary Drink not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/popular-recipe": {
      "get": {
        "tags": ["Popular Recipes"],
        "summary": "Get collection of popular cocktails",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Cocktails were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPopularCocktailsResponse"
                },
                "examples": {
                  "GetPopularCocktailsResponseExample": {
                    "value": [
                      {
                        "_id": "639b6de9ff77d221f190c502",
                        "drink": "Yellow Bird",
                        "instructions": "Shake and strain into a chilled cocktail glass",
                        "favoriteCount": 4
                      }
                    ]
                  },
                  "NoPopularCocktailsResponseExample": {
                    "value": {
                      "message": "No popular cocktails yet"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized (user isn`t authorized)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "AuthorizationErrorExample": {
                    "value": {
                      "message": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/ingredients/list": {
      "get": {
        "tags": ["Ingredients"],
        "summary": "Get collection of ingredients",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Ingredients were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIngredientsResponse"
                },
                "examples": {
                  "GetIngredientsResponseExample": {
                    "value": [
                      {
                        "_id": "639b6de9ff77d221f190c51e",
                        "title": "Strawberry schnapps",
                        "ingredientThumb": "http://res.cloudinary.com",
                        "thumb-medium": "http://res.cloudinary.com",
                        "thumb-small": "http://res.cloudinary.com"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },

    "/search": {
      "get": {
        "tags": ["Search"],
        "summary": "Search cocktail by key word in the category, ingredient or name",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Recipe category",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ingredients",
            "in": "query",
            "description": "Recipe ingredients",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Recipes per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "format": "int64"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "OK (Cocktails were successfully found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCocktailsResponse"
                },
                "examples": {
                  "SearchCocktailsResponseExample": {
                    "value": {
                      "totalHits": 7,
                      "drinks": [
                        {
                          "_id": "639b6de9ff77d221f190c51e",
                          "drink": "Affair",
                          "category": "Ordinary Drink",
                          "alcoholic": "Alcoholic",
                          "glass": "Highball glass",
                          "instructions": "Pour schnapps, orange juice, and cranberry juice over ice in a highball glass.",
                          "drinkThumb": "http://res.cloudinary.com",
                          "ingredients": [
                            {
                              "title": "Strawberry schnapps",
                              "measure": "2 oz ",
                              "ingredientThumb": "http://res.cloudinary.com",
                              "thumb-medium": "http://res.cloudinary.com",
                              "thumb-small": "http://res.cloudinary.com"
                            }
                          ],
                          "usersFavorite": [
                            "64e7adf3e24c73d3276e88ff",
                            "64e66c7c37cd1ffa91e1d8d2"
                          ],
                          "updatedAt": "2023-08-31T13:29:01.194Z",
                          "description": "The spring punch is a highball cocktail of vodka and liqueur."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not Found (There is no such a cocktail in the data-base)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFoundErrorExample": {
                    "value": {
                      "message": "drinks not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name, from 3 to 16 symbols"
          },
          "email": {
            "type": "string",
            "description": "User's email, should match regular expression",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password, at least 6 symbols, should contain at least one number, one uppercase letter and one lowercase letter",
            "format": "password",
            "example": "Examplepassword1"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name, from 3 to 16 symbols"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email, should match regular expression",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password, should contain at least one number, one uppercase letter and one lowercase letter",
            "format": "password",
            "example": "Examplepassword1"
          }
        }
      },

      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's access token"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },

      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Authorization, validation or another error"
          }
        }
      },

      "GetCurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name, from 3 to 16 symbols"
          },
          "email": {
            "type": "string",
            "description": "Current user`s email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "Link to the user`s avatar"
          }
        }
      },

      "ChangingInfoRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name, from 3 to 16 symbols"
          }
        }
      },

      "ChangingInfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name after successful changing"
          }
        }
      },

      "ChangingaAvatarRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "New user`s avatar",
            "format": "binary"
          }
        }
      },

      "ChangingAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "Link to User's avatar after successful changing"
          }
        }
      },

      "GetOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "totalHits": {
            "type": "integer",
            "description": "Number of cocktail that were found",
            "format": "int64"
          },
          "cocktails": {
            "type": "array",
            "properties": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CocktailRecipe"
                  }
                ]
              }
            },
            "format": "array"
          }
        }
      },

      "CocktailRecipe": {
        "type": "object",
        "required": [
          "drink",
          "category",
          "alcoholic",
          "glass",
          "instructions",
          "drinkThumb",
          "ingredients",
          "owner"
        ],
        "properties": {
          "drink": {
            "type": "string",
            "description": "Cocktail name, should contain at least 2 symbols"
          },
          "drinkAlternate": {
            "type": "string",
            "description": "I have any clue what it is :)"
          },
          "tags": {
            "type": "string",
            "description": "Some tags which related to cocktail"
          },
          "video": {
            "type": "string",
            "description": "Link to the cocktail preparation video"
          },
          "description": {
            "type": "string",
            "description": "Description of the cocktail"
          },
          "category": {
            "type": "string",
            "enum": [
              "Ordinary Drink",
              "Cocktail",
              "Shake",
              "Other/Unknown",
              "Cocoa",
              "Shot",
              "Coffee/Tea",
              "Homemade Liqueur",
              "Punch/Party Drink",
              "Beer",
              "Soft Drink"
            ],
            "description": "Category of the cocktail, should be chosen from suggested list of categories"
          },
          "IBA": {
            "type": "string",
            "description": "I have any clue what it is also :)"
          },
          "alcoholic": {
            "type": "string",
            "description": "Type of the cocktail, should be chosen from suggested values: alcoholic/non alcoholic"
          },
          "glass": {
            "type": "string",
            "enum": [
              "Highball glass",
              "Cocktail glass",
              "Old-fashioned glass",
              "Whiskey Glass",
              "Collins glass",
              "Pousse cafe glass",
              "Champagne flute",
              "Whiskey sour glass",
              "Cordial glass",
              "Brandy snifter",
              "White wine glass",
              "Nick and Nora Glass",
              "Hurricane glass",
              "Coffee mug",
              "Shot glass",
              "Jar",
              "Irish coffee cup",
              "Punch bowl",
              "Pitcher",
              "Pint glass",
              "Copper Mug",
              "Wine Glass",
              "Beer mug",
              "Margarita/Coupette glass",
              "Beer pilsner",
              "Beer Glass",
              "Parfait glass",
              "Mason jar",
              "Margarita glass",
              "Martini Glass",
              "Balloon Glass",
              "Coupe Glass"
            ],
            "description": "Category of the cocktail, should be chosen from suggested list of categories"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions to the preparation of the cocktail"
          },
          "instructionsES": {
            "type": "string",
            "description": "Instructions in Spanish"
          },
          "instructionsDE": {
            "type": "string",
            "description": "Instructions in German"
          },
          "instructionsFR": {
            "type": "string",
            "description": "Instructions in French"
          },
          "instructionsIT": {
            "type": "string",
            "description": "Instructions in Italian"
          },
          "instructionsRU": {
            "type": "string",
            "description": "Should be replaced by Ukranian"
          },
          "instructionsPL": {
            "type": "string",
            "description": "Instructions in Polish"
          },
          "instructionsUK": {
            "type": "string",
            "description": "Instructions in English"
          },
          "drinkThumb": {
            "type": "string",
            "description": "Link to the cocktail image",
            "format": "binary"
          },
          "ingredients": {
            "type": "array",
            "description": "Array of cocktail ingredients",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Ingredient"
                }
              ]
            },
            "format": "array"
          },
          "usersFavorite": {
            "type": "array",
            "description": "Array of users who added cocktail to favorites",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/User"
                }
              ]
            },
            "format": "array"
          },
          "owner": {
            "type": "object",
            "description": "User who added the cocktail",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            },
            "format": "object"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of cocktail creation",
            "format": "date-time"
          }
        }
      },

      "CreatingCocktailRequest": {
        "type": "object",
        "required": [
          "drink",
          "category",
          "glass",
          "instructions",
          "drinkThumb",
          "ingredients"
        ],
        "properties": {
          "drink": {
            "type": "string",
            "description": "Cocktail name, should contain at least 2 symbols"
          },
          "description": {
            "type": "string",
            "description": "Description of the cocktail"
          },
          "category": {
            "type": "string",
            "enum": [
              "Ordinary Drink",
              "Cocktail",
              "Shake",
              "Other/Unknown",
              "Cocoa",
              "Shot",
              "Coffee/Tea",
              "Homemade Liqueur",
              "Punch/Party Drink",
              "Beer",
              "Soft Drink"
            ],
            "description": "Category of the cocktail, should be chosen from suggested list of categories"
          },
          "alcoholic": {
            "type": "string",
            "description": "Type of the cocktail, should be chosen from suggested values: alcoholic/non alcoholic"
          },
          "glass": {
            "type": "string",
            "enum": [
              "Highball glass",
              "Cocktail glass",
              "Old-fashioned glass",
              "Whiskey Glass",
              "Collins glass",
              "Pousse cafe glass",
              "Champagne flute",
              "Whiskey sour glass",
              "Cordial glass",
              "Brandy snifter",
              "White wine glass",
              "Nick and Nora Glass",
              "Hurricane glass",
              "Coffee mug",
              "Shot glass",
              "Jar",
              "Irish coffee cup",
              "Punch bowl",
              "Pitcher",
              "Pint glass",
              "Copper Mug",
              "Wine Glass",
              "Beer mug",
              "Margarita/Coupette glass",
              "Beer pilsner",
              "Beer Glass",
              "Parfait glass",
              "Mason jar",
              "Margarita glass",
              "Martini Glass",
              "Balloon Glass",
              "Coupe Glass"
            ],
            "description": "Category of the cocktail, should be chosen from suggested list of categories"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions to the preparation of the cocktail"
          },
          "drinkThumb": {
            "type": "string",
            "description": "Link to the cocktail image",
            "format": "binary"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "measure": { "type": "string" }
              }
            }
          }
        }
      },

      "Ingredient": {
        "type": "object",
        "required": ["title", "ingredientThumb", "thumb-medium", "thumb-small"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Ingredient name"
          },
          "measure": {
            "type": "integer",
            "description": "Quantity of ingredient",
            "format": "int64"
          },
          "ingredientThumb": {
            "type": "string",
            "description": "Link to the large ingredient image"
          },
          "thumb-medium": {
            "type": "string",
            "description": "Link to the medium ingredient image"
          },
          "thumb-small": {
            "type": "string",
            "description": "Link to the small ingredient image"
          }
        }
      },

      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name, from 3 to 16 symbols"
          },
          "email": {
            "type": "string",
            "description": "User's email, should match regular expression",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password, at least 6 symbols, should contain at least one number, one uppercase letter and one lowercase letter",
            "format": "password"
          },
          "verificationToken": {
            "type": "string",
            "description": "User`s access token"
          },
          "avatarURL": {
            "type": "string",
            "description": "Link to the user`s avatar"
          },
          "subscription": {
            "type": "boolean",
            "description": "Determines if the user has a subscription or not"
          },
          "verify": {
            "type": "boolean",
            "description": "Determines if the user has verified their email or not"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of user`s creation in the data-base",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of user`s update in the data-base",
            "format": "date-time"
          }
        }
      },

      "DeleteOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "totalHits": {
            "type": "integer",
            "description": "Number of cocktail that were found",
            "format": "int64"
          },
          "cocktails": {
            "type": "array",
            "properties": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CocktailRecipe"
                  }
                ]
              }
            },
            "format": "array"
          }
        }
      },

      "AddToFavoriteRecipesResponse": {
        "type": "object",
        "properties": {
          "totalHits": {
            "type": "integer",
            "description": "Number of cocktail that were found",
            "format": "int64"
          },
          "cocktails": {
            "type": "array",
            "properties": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CocktailRecipe"
                  }
                ]
              }
            },
            "format": "array"
          }
        }
      },

      "GetGlassesResponse": {
        "type": "array",
        "description": "Array of glasses which user can use in recipes",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Glass"
            }
          ]
        },
        "format": "array"
      },

      "Glass": {
        "type": "string",
        "description": "Type of glass which user can use in recipes"
      },

      "SubscriptionRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email, should match regular expression",
            "format": "email"
          }
        }
      },

      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about successful subscription"
          }
        }
      },

      "GetCategoriesResponse": {
        "type": "array",
        "description": "Array of glasses which user can use in recipes",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Category"
            }
          ]
        },
        "format": "array"
      },

      "Category": {
        "type": "string",
        "description": "Category of recipe"
      },

      "GetCocktailsResponse": {
        "type": "array",
        "properties": {
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CocktailRecipe"
              }
            ]
          }
        },
        "format": "array"
      },

      "GetPopularCocktailsResponse": {
        "type": "array",
        "properties": {
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PopularCocktail"
              }
            ]
          }
        },
        "format": "array"
      },

      "PopularCocktail": {
        "type": "object",
        "required": ["drink", "instructions", "favouriteCount"],
        "properties": {
          "drink": {
            "type": "string",
            "description": "Cocktail name, should contain at least 2 symbols"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions to the preparation of the cocktail"
          },
          "favouriteCount": {
            "type": "integer",
            "description": "Number of user`s who added cocktail to populars",
            "format": "int64"
          }
        }
      },

      "GetIngredientsResponse": {
        "type": "array",
        "properties": {
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ingredient"
              }
            ]
          }
        },
        "format": "array"
      },

      "SearchCocktailsResponse": {
        "type": "object",
        "properties": {
          "totalHits": {
            "type": "integer",
            "description": "Number of cocktail that were found",
            "format": "int64"
          },
          "drinks": {
            "type": "array",
            "properties": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CocktailRecipe"
                  }
                ]
              }
            },
            "format": "array"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
